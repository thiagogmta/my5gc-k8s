# Esse manifesto executa as funões do Free5gC em pods no kubernetes
# Thiago Guimarães Tavares
# thiagogmta@ifto.edu.br
# kompose.cmd: kompose convert -o free5gc-k8s.yaml --volumes hostPath
# kompose.version: 1.22.0 (955b78124)

# Início do Manifesto
apiVersion: v1
items:

  #----------------------------------------#
  # KIND: NetworkPolicy
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: 5gcorenetwork
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/5gcorenetwork: "true"
      podSelector:
        matchLabels:
          io.kompose.network/5gcorenetwork: "true"

  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: lorawan
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/lorawan: "true"
      podSelector:
        matchLabels:
          io.kompose.network/lorawan: "true"

  #----------------------------------------#
  # KIND: SERVICE
  - apiVersion: v1
    kind: Service
    metadata:
      name: db
    spec:
      ports:
        - name: "27017"
          port: 27017
          targetPort: 27017
      selector:
        app: db
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-amf
    spec:
      ports:
        - name: "29518"
          port: 29518
          targetPort: 29518
      selector:
        app: my5gcore-amf
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-ausf
    spec:
      ports:
        - name: "29509"
          port: 29509
          targetPort: 29509
      selector:
        app: my5gcore-ausf
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-n3iwf
    spec:
      ports:
        - name: "20000"
          port: 20000
          targetPort: 20000
        - name: "500"
          port: 500
          protocol: UDP
          targetPort: 500
        - name: "4500"
          port: 4500
          protocol: UDP
          targetPort: 4500
      selector:
        app: my5gcore-n3iwf
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-nrf
    spec:
      ports:
        - name: "29510"
          port: 29510
          targetPort: 29510
      selector:
        app: my5gcore-nrf
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-nssf
    spec:
      ports:
        - name: "29531"
          port: 29531
          targetPort: 29531
      selector:
        app: my5gcore-nssf
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-pcf
    spec:
      ports:
        - name: "29507"
          port: 29507
          targetPort: 29507
      selector:
        app: my5gcore-pcf
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-smf
    spec:
      ports:
        - name: "29502"
          port: 29502
          targetPort: 29502
        - name: "8805"
          port: 8805
          protocol: UDP
          targetPort: 8805
      selector:
        app: my5gcore-smf
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-udm
    spec:
      ports:
        - name: "29503"
          port: 29503
          targetPort: 29503
      selector:
        app: my5gcore-udm
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-udr
    spec:
      ports:
        - name: "29504"
          port: 29504
          targetPort: 29504
      selector:
        app: my5gcore-udr
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-upf1
    spec:
      ports:
        - name: "2152"
          port: 2152
          protocol: UDP
          targetPort: 2152
        - name: "8805"
          port: 8805
          protocol: UDP
          targetPort: 8805
      selector:
        app: my5gcore-upf1
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: my5gcore-webui
    spec:
      ports:
        - name: "5000"
          port: 5000
          targetPort: 5000
      selector:
        app: my5gcore-webui
    status:
      loadBalancer: {}

  #----------------------------------------#
  # KIND: DEPLOYMENT
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: db
      template:
        metadata:
          labels:
            app: db
        spec:
          containers:
            - args:
                - mongod
                - --port
                - "27017"
              image: mongo
              name: mongodb
              ports:
                - containerPort: 27017
              resources: {}
              volumeMounts:
                - mountPath: /data/db
                  name: db-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /home/thiago/my5gc-dockerhub/dbdata
              name: db-hostpath0
    status: {}
    
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-amf
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-amf
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-amf
        spec:
          containers:
            - args:
                - ./amf
                - -amfcfg
                - ../config/amfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_amf
              name: amf
              ports:
                - containerPort: 29518
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/amfcfg.conf
                  name: my5gcore-amf-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-amf-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /amfcfg.conf
              name: my5gcore-amf-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-amf-hostpath1
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-ausf
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-ausf
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-ausf
        spec:
          containers:
            - args:
                - ./ausf
                - -ausfcfg
                - ../config/ausfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_ausf
              name: ausf
              ports:
                - containerPort: 29509
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/ausfcfg.conf
                  name: my5gcore-ausf-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-ausf-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /ausfcfg.conf
              name: my5gcore-ausf-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-ausf-hostpath1
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-n3iwf
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-n3iwf
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-n3iwf
        spec:
          containers:
            - args:
                - sh
                - -c
                - ./n3iwf-ipsec.sh && ./n3iwf -n3iwfcfg ../config/n3iwfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_n3iwf
              name: n3iwf
              ports:
                - containerPort: 20000
                - containerPort: 500
                  protocol: UDP
                - containerPort: 4500
                  protocol: UDP
              resources: {}
              securityContext:
                capabilities:
                  add:
                    - NET_ADMIN
              volumeMounts:
                - mountPath: /my5Gcore/config/n3iwfcfg.conf
                  name: my5gcore-n3iwf-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-n3iwf-hostpath1
                - mountPath: /my5Gcore/n3iwf/n3iwf-ipsec.sh
                  name: my5gcore-n3iwf-hostpath2
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /n3iwfcfg.conf
              name: my5gcore-n3iwf-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-n3iwf-hostpath1
            - hostPath:
                path: /n3iwf-ipsec.sh
              name: my5gcore-n3iwf-hostpath2
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-nrf
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-nrf
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-nrf
        spec:
          containers:
            - args:
                - ./nrf
                - -nrfcfg
                - ../config/nrfcfg.conf
              env:
                - name: DB_URI
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_nrf
              name: nrf
              ports:
                - containerPort: 29510
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/nrfcfg.conf
                  name: my5gcore-nrf-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-nrf-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /nrfcfg.conf
              name: my5gcore-nrf-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-nrf-hostpath1
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-nssf
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-nssf
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-nssf
        spec:
          containers:
            - args:
                - ./nssf
                - -nssfcfg
                - ../config/nssfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_nssf
              name: nssf
              ports:
                - containerPort: 29531
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/nssfcfg.conf
                  name: my5gcore-nssf-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-nssf-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /nssfcfg.conf
              name: my5gcore-nssf-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-nssf-hostpath1
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-pcf
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-pcf
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-pcf
        spec:
          containers:
            - args:
                - ./pcf
                - -pcfcfg
                - ../config/pcfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_pcf
              name: pcf
              ports:
                - containerPort: 29507
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/pcfcfg.conf
                  name: my5gcore-pcf-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-pcf-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /pcfcfg.conf
              name: my5gcore-pcf-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-pcf-hostpath1
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-smf
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-smf
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-smf
        spec:
          containers:
            - args:
                - ./smf
                - -smfcfg
                - ../config/smfcfg.conf
                - -uerouting
                - ../config/uerouting.yaml
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_smf
              name: smf
              ports:
                - containerPort: 29502
                - containerPort: 8805
                  protocol: UDP
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/smfcfg.conf
                  name: my5gcore-smf-hostpath0
                - mountPath: /my5Gcore/config/uerouting.yaml
                  name: my5gcore-smf-hostpath1
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-smf-hostpath2
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /smfcfg.conf
              name: my5gcore-smf-hostpath0
            - hostPath:
                path: /uerouting.yaml
              name: my5gcore-smf-hostpath1
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-smf-hostpath2
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-udm
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-udm
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-udm
        spec:
          containers:
            - args:
                - ./udm
                - -udmcfg
                - ../config/udmcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_udm
              name: udm
              ports:
                - containerPort: 29503
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/udmcfg.conf
                  name: my5gcore-udm-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-udm-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /udmcfg.conf
              name: my5gcore-udm-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-udm-hostpath1
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-udr
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-udr
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-udr
        spec:
          containers:
            - args:
                - ./udr
                - -udrcfg
                - ../config/udrcfg.conf
              env:
                - name: DB_URI
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_udr
              name: udr
              ports:
                - containerPort: 29504
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/udrcfg.conf
                  name: my5gcore-udr-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-udr-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /udrcfg.conf
              name: my5gcore-udr-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-udr-hostpath1
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-upf1
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-upf1
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            io.kompose.network/lorawan: "true"
            app: my5gcore-upf1
        spec:
          containers:
            - args:
                - bash
                - -c
                - ./router-upf.sh && ./free5gc-upfd -f ../config/upfcfg.yaml
              image: thiagogmta/nf_upf
              name: upf
              ports:
                - containerPort: 2152
                  protocol: UDP
                - containerPort: 8805
                  protocol: UDP
              resources: {}
              securityContext:
                capabilities:
                  add:
                    - ALL
              volumeMounts:
                - mountPath: /my5Gcore/config/upfcfg.yaml
                  name: my5gcore-upf1-hostpath0
                - mountPath: /my5Gcore/free5gc-upfd/router-upf.sh
                  name: my5gcore-upf1-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /upfcfg.yaml
              name: my5gcore-upf1-hostpath0
            - hostPath:
                path: /router-upf-lorawan.sh
              name: my5gcore-upf1-hostpath1
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: my5gcore-webui
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: my5gcore-webui
      template:
        metadata:
          labels:
            io.kompose.network/5gcorenetwork: "true"
            app: my5gcore-webui
        spec:
          containers:
            - args:
                - ./webui
                - -free5gccfg
                - ../config/free5GC.conf
                - --webuicfg
                - ../config/webuicfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/webui
              name: webui
              ports:
                - containerPort: 5000
              resources: {}
              volumeMounts:
                - mountPath: /my5Gcore/config/webuicfg.conf
                  name: my5gcore-webui-hostpath0
                - mountPath: /my5Gcore/config/free5GC.conf
                  name: my5gcore-webui-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /webuicfg.conf
              name: my5gcore-webui-hostpath0
            - hostPath:
                path: /my5Gcore.conf
              name: my5gcore-webui-hostpath1
    status: {}
    
kind: List
metadata: {}